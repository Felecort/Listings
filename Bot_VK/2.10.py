
# VERSION 2.9

# –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
from social_ethosa import *
from SimpleQIWI import *

import datetime
import re
import time
import os

# –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º
rmode = 0
msglist = admins = []
autotr = log_flug = False
trlang = 'en'
counter = 1

# –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
def glbs():
    global peer_id
    global message_id
    global trlang
    global chat
    global chat_msg

# –ß—Ç–µ–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
with open('options.py', "r",encoding="utf-8") as f:
    exec(f.read())
    f.close()

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –¥–ª—è –ª–æ–≥–æ–≤
today = datetime.datetime.today()
date = today.strftime("%Y-%m-%d  %H-%M-%S")
if not os.path.exists('Logs_Bot'): os.makedirs('Logs_Bot')
file_path = os.path.join('Logs_Bot',"log " + date + ".log")

# –ó–∞–ø–∏—Å—å –¥–µ—Ñ–æ–ª—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –ª–æ–≥
log_file = open(file_path, "w")
log_file.write ("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω:  " + str(date) + "\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: " + acc_id + "\n---------------------------------\n–õ–æ–≥–∏ –∫–æ–º–∞–Ω–¥:\n\n")
log_file.close()

print(date)
print('–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞')

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –∏ –æ—à–∏–±–æ–∫
def Log(counter, message):
    log_file = open(file_path, "a")
    log_file.write(counter + message + "\n\n\n")
    log_file.close()

""" –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ """

# –ë–∞–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã
def ban(id):
    vk.account.ban(owner_id=id)

# –†–∞–∑–±–∞–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã
def unban(id):
    vk.account.unban(owner_id=id)

# –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –≤ –¥—Ä—É–∑—å—è
def addfriend(id):
    vk.friends.add(user_id=id)

# –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –¥—Ä—É–∑–µ–π
def delfriend(id):
    vk.friends.delete(user_id=id)

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ
def image(path,**kwargs):
    photo = vk.uploader.uploadMessagePhoto(files=path, peer_id=peer_id, formatting=True)
    vk.messages.send(attachment=",".join(photo),peer_id=peer_id,**kwargs)

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è (Python –∫–æ–¥–∞)
def send(msge,**kwargs):
    vk.messages.send(message=msge,peer_id=peer_id,**kwargs)

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∏–∫–µ—Ä–∞
def s(stik):
    vk.messages.send(sticker_id=stik,peer_id=peer_id)

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ(–≤–æ–∑–≤—Ä–∞—Ç) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–µ—Å–µ–¥—É
def add(id):
    vk.messages.addChatUser(chat_id=int(peer_id)-2000000000,user_id=id)

# –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–µ—Å–µ–¥—ã (–µ—Å–ª–∏ –µ—Å—Ç—å –∏–ª–∏ –≤—ã—à–µ–ª)
def back(id):
    try: vk.messages.removeChatUser(user_id=id,chat_id=int(peer_id)-2000000000)
    except: 'error'
    vk.messages.addChatUser(chat_id=int(peer_id)-2000000000,user_id=id)

# –ö–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def kick(id):
    vk.messages.removeChatUser(user_id=id,chat_id=int(peer_id)-2000000000)

# –ü–æ–ª—É—á–µ–Ω–∏–µ ID
def id(idr):
    idr = idr.replace('https://vk.com/','')
    if not str(idr).isdigit():
        domens = re.findall(r"(?:@|\[|id)([^\[\@\|\]\s,\(\)]+)", idr)
        ids = vk.users.get(user_ids=",".join(domens))
        ids = [i["id"] for i in ids["response"]]
        return ids[0]
    else: return idr

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
def rmsg():
    if chat: chat_msg = vk.messages.getById(message_ids=message_id)
    return [chat_msg['response']['items'][0]['reply_message']['text'],chat_msg['response']['items'][0]['reply_message']['id']]

# –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
def delete(message_id1):
    vk.messages.delete(delete_for_all=1,message_ids=message_id1)

""" –ü–æ—á—Ç–∏ –±–µ—Å–ø–æ–ª–µ–∑–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ """

# –û—Ç—á—ë—Ç(–ö–∞–∫ –±—ã –Ω—É–∂–Ω–æ, –Ω–æ –Ω–µ—Ç)
def msend(error):
    if err_id != 0: vk.messages.send(message=error,peer_id=err_id)

# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
def edit(msg,**kwargs):
    vk.messages.edit(**kwargs,peer_id=peer_id,message=msg,message_id=message_id,keep_forward_messages=1)

# –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ —Ä—É—Å—Å–∫–∏–π
def ru(msg):
    return yt.translate(text=msg, lang="ru")['text'][0]

# –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
def tr(msg):
    return yt.translate(text=msg, lang=trlang)['text'][0]

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
for event in vk.longpoll.listen():
    try:
        if event['type'] == 4:
            peer_id = event['peer_id']
            message = event['text'].replace('<br>','\n').replace('¬∞',' ').replace('&lt;','<').replace('&gt;','>').replace('&quot;','"')
            message_id = event['message_id']
            reply = 0

            # –ü–æ–ª—É—á–µ–Ω–∏–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∏–ª–∏
            if 'mentions' in event['object']: reply = event['object']['mentions'][0]
            if 'from' in event['object']:

                # –ë–µ—Å–µ–¥–∞
                from_id = event['object']['from']
                chat = True
            else:

                # –õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                chat = False
                chat_msg = vk.messages.getById(message_ids=event['message_id'])
                from_id = chat_msg['response']['items'][0]['from_id']
                reply = peer_id

            # –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞(–≤–ª–∞–¥–µ–ª—å—Ü–∞ –±–æ—Ç–∞ )
            admin = False
            if str(from_id) == acc_id: admin = True
            elif from_id in admins: admin = True

            # –ú–æ–¥—É–ª—å —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
            if rmode == 1 and admin: msglist.append(int(event['message_id']))

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
            if admin:

                # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ
                log_flug = True
                cmd = message.split(' ',maxsplit=1)

                if message[:2] == '//': exec(message[2:])

                elif cmd[0] in ['/kick','/–∫–∏–∫']:
                    if len(cmd) == 1: kick(reply)
                    else: kick(id(cmd[1]))

                elif cmd[0] in ['/rt','==']:
                    if len(cmd) > 1: edit(ru(cmd[1]))
                    else: edit(ru(rmsg()[0]))

                elif cmd[0] in ['/t','~~']:
                    if len(cmd) > 1: edit(tr(cmd[1]))
                    else: edit(tr(rmsg()[0]))

                elif cmd[0] in ['/return','/back','.–≤–µ—Ä–Ω—É—Ç—å,', '/–≤–µ—Ä–Ω—É—Ç—å']:
                    if len(cmd) == 1: back(reply)
                    else: back(id(cmd[1]))

                elif message in ['/start','/—Å—Ç–∞—Ä—Ç']:
                    rmode = 1
                    msglist = [int(event['message_id'])]

                elif cmd[0] in ['/lang','/—è–∑—ã–∫']:
                    if len(cmd)>1: trlang = cmd[1]
                    else: trlang = 'en'

                elif message in ['/stop','/—Å—Ç–æ–ø']:rmode = 0

                elif message in ['/delete','/—É–¥–∞–ª–∏—Ç—å','/del']:
                    msglist.append(int(event['message_id']))
                    vk.messages.delete(delete_for_all=1,message_ids=str(str(msglist).replace('[','').replace(']','')))
                    msglist=[]
                    rmode = 0

                elif message in ['/del message','##', '/—É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â']:
                    try: delete(rmsg()[1])
                    except: 'err'
                    delete(message_id)

                elif message in ['/i','~']:
                    try: edit(BotWrapper().translit(rmsg()[0]))
                    except: 'err'

                elif message in ['/a','*','/trOn']:
                    autotr = True
                    delete(message_id)

                elif message in ['/aa','**','/trOff']:
                    autotr = False
                    delete(message_id)

                elif cmd[0] in ['/in','/–ª—Å']:
                    if len(cmd) > 1: vk.messages.send(message=cmd[1],peer_id=str(reply))
                    else: vk.messages.send(message='.',peer_id=str(reply))

                elif message in ['/qiwi','/–∫–∏–≤–∏','/–±–∞–ª–∞–Ω—Å']:
                    qiwi = QApi(token=qiwitoken,phone=qiwinum)
                    send('–ë–∞–ª–∞–Ω—Å –Ω–∞ QIWI: ' + str(qiwi.balance[0]))

                elif message in ['/b+','/+—á—Å','/ban']:ban(reply)

                elif message in ['/b-','/-—á—Å','/unban']:unban(reply)

                elif message in ['/f+','/+–¥—Ä—É–≥','/addfriend']: addfriend(reply)

                elif message in ['/f-','/-–¥—Ä—É–≥','/delfriend']: delfriend(reply)

                elif cmd[0] in ['/call','/—Å–æ–∑–≤–∞—Ç—å']:
                    people=vk.messages.getConversationMembers(peer_id=peer_id)['response']['profiles']
                    jn = 0
                    if len(cmd) > 1: jt = 'üì¢ –°–æ–∑—ã–≤ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±–µ—Å–µ–¥—ã\n–ü—Ä–∏—á–∏–Ω–∞: '+cmd[1]
                    else: jt = 'üì¢ –°–æ–∑—ã–≤ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±–µ—Å–µ–¥—ã'
                    jt1 = ''
                    jt2 = ''
                    while jn != len(people):
                        if jn > 249: jt2 = jt2 + '[id' + str(people[jn]['id'])+ '|\u200b]'
                        else: jt1 = jt1 + '[id' + str(people[jn]['id'])+ '|\u200b]'
                        jn = jn + 1
                    send(jt + jt1)
                    if jt2 != '': send(jt+jt2)
                else: log_flug = False

                #–ê–≤—Ç–æ–ø–µ—Ä–µ–≤–æ–¥
            elif autotr and len(message)>1 and log_flug: edit(tr(message))

            if admin and log_flug:
                Log(str(counter), ")\nCMD: " + str(message))
                counter += 1

    # –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å –∏–ª–∏ –≤–≤–µ–¥–µ–ª–∞ –∫—Ä–∏–≤–∞—è –∫–æ–º–∞–Ω–¥–∞            
    except Exception as error:
        time.sleep(1)
        if 'Captcha needed' in str(error):
            print('–ö–∞–ø—á–∞, –∂–¥—ë–º 10 —Å–µ–∫')
            time.sleep(10)
        elif "FileNotFoundError" in str(error): print("–§–∞–π–ª –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ")
        else: print(error)
        msend(error)
        Log(str(counter),  ")\nCMD:\n" + str(message) + "\n\nERR:\n" +  str(error))
        counter += 1